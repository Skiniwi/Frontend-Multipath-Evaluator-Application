{"version":3,"sources":["Components/Map/icons/image.svg","serviceWorker.js","Home.js","Config/Config.js","Services/gqlClient.js","Components/Map/Map.js","Components/Evaluation/Charts.js","Components/Evaluation/EvaluationAllPoints.js","Components/Map/GetPointsData.js","Components/Map/GetScenarionames.js","Components/ExportCsv.js","Components/Evaluation/EvalOnePoint.js","Components/Map/RequestsSub.js","App.js","Components/NoPageFound.js","Routes.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","href","Config","authLink","setContext","_","headers","token","gqlToken","authorization","httpLink","HttpLink","uri","gqlBaseURL","GqlClient","ApolloClient","link","concat","cache","InMemoryCache","Leipzig","Map","props","useState","receivers","setReceivers","id","setId","calculateddata","setCalculateddataa","transmitter","setTransmitter","txinfo","setTxInfo","useEffect","points","tx","parent","selectedPoint","setSelectedPointlatlon","usefullData","polylinesR","polylinesD","lineOfSight","path_pos_array","distance_array","distance_array_LOS","distance_array_polyR","distance_array_polyD","options","units","tx_point","id_poly","power_LOS","power_arry_without_losR","power_arry_without_losD","sum_delay","avg_delay","sum_power","avg_power","sum_strength","avg_strength","expectation_delay","expectation_delay_sq","delaySpread","delaySpread1","aoaSpread","aodSpread","i","length","forEach","d","turf","point_id","to","distance","push","Math","floor","paths","num_of_interactions","interactions","j","position","lat","lon","interacted_obj_id","interaction_type","polylineR","toPoly","distancePolyR","power","polylineD","distancePolyD","polyline","distanceLOS","usefullItem","name","point","number_of_path","number_of_los","number_of_pathR","number_of_pathD","polysR","polysD","polyLineOfsight","handleClickCircle","event","target","_latlng","lng","sourceTarget","parentt","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","attribution","url","icon","src","image","alt","Popup","scope","map","item","Circle","onClick","key","fillColor","radius","Polyline","positions","color","index","weight","opacity","smoothFactor","Chart","dCdf","setDCdf","dCCdf","setDCCdf","setD","y","setYarray","x","setXarray","namey","setNamey","dataKey","setDataKey","valuey","setValuey","namescatterr","setNamescatterr","datachart","setDatachart","domain","setDomain","selectedchart","setSelectedchart","namescatter","setNameScatter","nameScatterCdf","setNameScatterCdf","nameScatterCCdf","setNameScatterCCdf","selectedValuex","setSelectedValuex","selectedValuey","setSelectedValuey","collapse","setCollapse","status","setStatus","colorr","setColor","colorr1","setColor1","arrayChart","mycdf","cdf","cdfx","xs","cdfy","ps","array","v","myccdf","ccdfx","ccdfy","arrayc","Object","keys","slice","toUpperCase","onExited","colo","undefined","uuid","Navbar","expand","Button","size","dark","deleteChart","Collapse","isOpen","onEntering","Spinner","onEntered","onExiting","width","height","data","margin","top","right","bottom","left","strokeDasharray","type","style","fontSize","fontFamily","stroke","axisLine","tickLine","label","fill","value","offset","tickCount","angle","dy","wrapperStyle","cursor","dot","activeShape","activeDot","r","Evaluation","setPoints","setIdPoint","final_keys","setFinal_Keys","returnn","setReturnn","newchart","setNewchart","setColorr","calculatedcharts_all_points","calculated_data_one_point_for_popup","calculated_Data_all_points_for_charts","idd","distance_all_points","delaySpreadd","aoaSpreadd1","aodSpreadd1","avg_delay_all_pointss","avg_power_all_pointss","avg_strength_all_pointss","mu0_aoa","mu0_aod","numberofpaths","los","toLos","delay_arrayy","strength_array_one_point","dl_by_st_one_point","sq_delay_by_strength_one_point","power_array_mw_one_point","sq_st_array_one_point","aoa_by_st_one_point","sq_aoa_by_strength_one_point","aoa_array","aod_by_st_one_point","sq_aod_by_strength_one_point","aod_array","delay","field_strength","pow","reduce","p","c","avg_delay_all_points","sum_power_all_points","avg_power_all_points","log10","sum_strength_all_points","avg_strength_all_points","sqrt","teta_mu_Aoa","tetamu_sqrt_str_Aoa","previous","current","sigma_aoa","teta_mu_Aod","tetamu_sqrt_str_Aod","sigma_aod","Av_Power_Points","Av_Strength_Points","Av_Delay_Points","Distance_Points","DelaySpread_Points","AoA_Spread","AoD_Spread","Number_of_Paths","calculated_Data_all_keys","KeysFunction","evaluationn","alert","onOpening","onOpen","onClosing","onClosed","ButtonGroup","FormGroup","DropdownItem","header","Input","defaultChecked","onChange","placeholder","item1","index1","includes","filter","el","copyNewchart","assign","splice","ADD_REQUEST","gql","AddRequest","files","setFiles","useMutation","addRequest","selectedNameOfFile","setSelectedNameOfFile","handleChange","variables","serviceID","content","handleAddRequest11","ListGroupItem","action","tag","GetScenario","addRequest1","ExportReactCSV","csvData","fileName","filename","OnePoint","delay_array","strength_array","sq_st_ar","dl_by_st","sq_delay_by_strength","sq_delay_by_power_array","relative_delay","relative_strength","aoa_by_st","sq_aoa_by_strength","aod_by_st","sq_aod_by_strength","pathloss","power_array","power_array_mw","path_distance","los_distance","setSelectedPoint","ASA","ASD","setColorr1","polylines","calculatedcharts","calculatedpopup","calculated_Data_one_point_for_charts","calculatedall","setCalculatedall","relative_power","relative_power_procent","polyline_0","toPoly_0","distancePoly_0","PathLoss","distancePoly","console","log","expectation_delay1","expectation_delay_sq1","Paths_Power","Paths_Strength","Paths_Delay","Paths_Distance","iddd","save","savepoint","savePopup","saveChart","savedPoint","calculated_Data_one_keys","calculated_path_keys","path_Data_one_keys","calculatedarraykeys","path","ignorekeys","returnnn","newchart1","setNewchart1","copyNewchart1","REQUESTS_SUBSCRIPTION","RequestsSub","useSubscription","userID","setTx","setFile","responseAdded","service","JSON","parse","tx_position","tx_info","setIdd","evaluation","calculateddataa","App","client","NoPageFound","variant","routes","Routes","routeResult","useRoutes","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04805a14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.288b9272.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { A } from \"hookrouter\";\nconst Home = () => {\n    return (\n        <div className=\"col-md-6 offset-md-3 text-center\">\n            <h1 className=\"p-5\">\n                <br />\n                <br />\n                <br />\n                HFTL Evaluation of Multipath Radio Channels            </h1>\n            <h2>\n                CLick <A href=\"/App\"> here </A> to start the Client APP\n            </h2>\n            <hr />\n            <p className=\"lead\"></p>\n            <h4 className=\"p2\">Future Work:</h4>\n            <p className=\"lead\">\n                <br />\n                -Create Database and merge all Json Simulation Files into it. <br />\n                -Login register system with account activation, forgot password, reset\n                password, login as well as private and protected routes for\n                authenticated user and users with the role of admin.<br />\n                -More specific Evaluation Features<br />\n                -3D reprensentation<br />\n            </p>\n        </div>\n    );\n};\n\nexport default Home;\n","const Config = {\n    \"gqlBaseURL\": \"https://calchub.radiolab-dev0.beagile.one/query\",\n    \"gqlToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlcyI6WyJzZXJ2aWNlcyJdLCJ1c2VybmFtZSI6IndlYl9yYXl0cmFjZXIifQ.X-M9W-ynpsAAqPmOSlMnUeXYJ5IL3Sb6k3dSXKpXciE\",\n};\n\nexport default Config;\n","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { HttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\n\nimport Config from \"../Config/Config\";\n\nconst authLink = setContext((_, { headers }) => {\n    const token = Config.gqlToken;\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n        }\n    };\n});\n\nconst httpLink = new HttpLink({\n    uri: Config.gqlBaseURL\n});\n\nconst GqlClient = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});\n\nexport default GqlClient;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Map as LeafletMap,\n    TileLayer,\n    Polyline,\n    Popup,\n    Circle,\n} from \"react-leaflet\";\nimport image from \"./icons/image.svg\";\nimport Marker from 'react-leaflet-enhanced-marker';\nimport * as turf from \"@turf/turf\";\n// import { LassoControl } from \"leaflet-lasso\";\nconst Leipzig = [51.315579, 12.377772]\nconst Map = (props) => {\n    const [receivers, setReceivers] = useState([]);\n    const [id, setId] = useState(null);\n    const [calculateddata, setCalculateddataa] = useState({});\n    const [transmitter, setTransmitter] = useState([]);\n    const [txinfo, setTxInfo] = useState([]);\n\n    useEffect(() => {\n        if (!props.points) {\n            return\n\n        }\n        setReceivers(props.points);\n        setTransmitter(props.tx);\n        setCalculateddataa(props.calculateddata);\n        setTxInfo(props.txinfo)\n    }, [props.tx, props.points, props.parent, props.calculateddata, props.txinfo]);\n\n    const [selectedPoint, setSelectedPointlatlon] = useState([]);\n\n    const usefullData = [];\n    const polylinesR = [];\n    const polylinesD = [];\n\n    const lineOfSight = [];\n    const path_pos_array = [];\n    const distance_array = [];\n    const distance_array_LOS = [];\n    const distance_array_polyR = [];\n    const distance_array_polyD = [];\n\n    const options = { units: \"meters\" };\n    let tx_point = [];\n    const id_poly = [];\n\n    const power_LOS = [];\n    const power_arry_without_losR = [];\n    const power_arry_without_losD = [];\n\n    let sum_delay = []\n    let avg_delay = []\n    let sum_power = []\n    let avg_power = []\n    let sum_strength = []\n    let avg_strength = []\n    let expectation_delay = []\n    let expectation_delay_sq = []\n    let delaySpread = []\n    let delaySpread1 = []\n    let aoaSpread = []\n    let aodSpread = []\n\n    for (let i = 0; i < calculateddata.length; i++) {\n        if (calculateddata.length !== null) {\n            sum_delay = calculateddata[i].sum_delay;\n            avg_delay = calculateddata[i].avg_delay;\n            sum_power = calculateddata[i].sum_power;\n            avg_power = calculateddata[i].avg_power;\n            sum_strength = calculateddata[i].sum_strength;\n            avg_strength = calculateddata[i].avg_strength;\n            expectation_delay = calculateddata[i].expectation_delay;\n            expectation_delay_sq = calculateddata[i].expectation_delay_sq;\n            delaySpread = calculateddata[i].delaySpread;\n            aoaSpread = calculateddata[i].aoaSpread;\n            aodSpread = calculateddata[i].aodSpread;\n            delaySpread1 = calculateddata[i].delaySpread1;\n        }\n    }\n\n    receivers.forEach(d => {\n        tx_point = turf.point(transmitter);\n        for (let i = 0; i < d.paths.length; i++) {\n            if (id === d.point_id) {\n                //calculate the distance to the transmitter\n                const to = turf.point(selectedPoint);\n                const distance = turf.distance(tx_point, to, options);\n                distance_array.push(Math.floor(distance));\n                if (d.paths[i].num_of_interactions > 0 && selectedPoint.length > 0) {\n                    d.paths[i].interactions.forEach(j => {\n                        path_pos_array.push([j.position.lat, j.position.lon]);\n                        id_poly.push(j.interacted_obj_id)\n                        if (j.interaction_type === 'R') {\n                            let polylineR = [selectedPoint, [j.position.lat, j.position.lon], transmitter];\n                            polylinesR.push(polylineR);\n                            const toPoly = turf.lineString(polylineR);\n                            const distancePolyR = turf.length(toPoly, options);\n                            distance_array_polyR.push(Math.floor(distancePolyR));\n                            power_arry_without_losR.push(d.paths[i].power)\n                        }\n                        if (j.interaction_type === 'D') {\n                            let polylineD = [selectedPoint, [j.position.lat, j.position.lon], transmitter];\n                            polylinesD.push(polylineD);\n                            const toPoly = turf.lineString(polylineD);\n                            const distancePolyD = turf.length(toPoly, options);\n                            distance_array_polyD.push(Math.floor(distancePolyD));\n                            power_arry_without_losD.push(d.paths[i].power)\n                        }\n                    });\n                }\n                if (d.paths[i].num_of_interactions === 0 && selectedPoint.length > 0) {\n                    let polyline = [selectedPoint, transmitter]\n                    lineOfSight.push(polyline);\n                    const toPoly = turf.lineString(polyline);\n                    const distanceLOS = turf.length(toPoly, options);\n                    distance_array_LOS.push(Math.floor(distanceLOS));\n                    power_LOS.push(d.paths[0].power)\n                }\n            }\n        }\n\n\n        const usefullItem = {\n            name: d.point_id,\n            point: [d.position.lat, d.position.lon],\n            number_of_path: d.paths.length,\n            number_of_los: distance_array_LOS.length,\n            number_of_pathR: distance_array_polyR.length,\n            number_of_pathD: distance_array_polyD.length,\n            path_pos_array,\n            polysR: polylinesR,\n            polysD: polylinesD,\n            polyLineOfsight: lineOfSight,\n            distanceLOS: distance_array_LOS,\n            distance_array_polyR: distance_array_polyR,\n            distance_array_polyD: distance_array_polyD,\n            power_LOS: power_LOS,\n            power_arry_without_losR: power_arry_without_losR,\n            power_arry_without_losD: power_arry_without_losD,\n            sum_delay: sum_delay,\n            avg_delay: avg_delay,\n            sum_power: sum_power,\n            avg_power: avg_power,\n            sum_strength: sum_strength,\n            avg_strength: avg_strength,\n            expectation_delay: expectation_delay,\n            expectation_delay_sq: expectation_delay_sq,\n            delaySpread: delaySpread,\n            aoaSpread: aoaSpread,\n            aodSpread: aodSpread,\n            delaySpread1: delaySpread1,\n\n        };\n        usefullData.push(usefullItem);\n\n    })\n\n    //The parseInt() function parses a string argument and returns an integer of the specified\n    const handleClickCircle = (event) => {\n        setSelectedPointlatlon([event.target._latlng.lat, event.target._latlng.lng])\n        setId(event.sourceTarget.options.id)\n        props.parentt(event.sourceTarget.options.id)\n    }\n    return (\n        < div >\n            <LeafletMap\n                center={Leipzig}\n                zoom={10.5}\n                maxZoom={19}\n                attributionControl={true}\n                zoomControl={true}\n                doubleClickZoom={true}\n                scrollWheelZoom={true}\n                dragging={true}\n                animate={true}\n                easeLinearity={0.35}\n\n            >\n                <TileLayer\n                    attribution='&copy; <a href=\"://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n                    url='https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n                />\n                {transmitter.length > 0 &&\n                    < Marker position={transmitter} icon={<img src={image} alt=\"tx marker\" />} >\n                        <Popup>  {\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <th scope=\"row\"> Tx Antenna</th>\n                                    </tr>\n                                    <tr>\n                                        <td>Type of Antenna:</td>\n                                        <td>{txinfo['Type of Antenna']} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Tx Power:</td>\n                                        <td>{txinfo['power']} W </td>\n                                    </tr>\n                                    <tr>\n                                        <td> Frequency:</td>\n                                        <td>{txinfo['frequency']}Ghz </td>\n                                    </tr>\n                                </tbody>\n                            </table>}</Popup>\n                    </Marker >}\n\n                {usefullData.map(item => < Circle onClick={handleClickCircle} id={item.name} key={item.name} center={item.point} fillColor=\"blue\"\n                    radius={6} >\n                    <Popup key={`popup ${item.name} `} >{\n                        <div className=\"popup\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>ID :</td>\n                                        <td>{id} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Position Lat:</td>\n                                        <td>{item.point[0]} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Position Lon:</td>\n                                        <td>{item.point[1]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Distance to Tx :</td>\n                                        <td>{distance_array[0]} [m] </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total Rays:</td>\n                                        <td>{item.number_of_path}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>LOS Rays:</td>\n                                        <td>{item.number_of_los}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Reflected Rays:</td>\n                                        <td>{item.number_of_pathR}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Diffracted Rays:</td>\n                                        <td>{item.number_of_pathD}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> Average Delay:</td>\n                                        <td>{item.avg_delay}[µs]</td>\n                                    </tr>\n                                    <tr>\n                                        <td> Average Power:</td>\n                                        <td>{item.avg_power}[dBm]</td>\n                                    </tr>\n                                    <tr>\n                                        <td> Average Strength</td>\n                                        <td>{item.avg_strength}[dBuV/m]</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td> DelaySpread:</td>\n                                        <td>{item.delaySpread}[µs]</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    } </Popup>\n\n                    {item.polyLineOfsight.length > 0 && <Polyline key={`lospoly${item.name} `} positions={[item.polyLineOfsight]} color={'red'} >\n\n                        <Popup key={`popuplos ${item.name} `} >{\n                            <div >\n                                <table >\n                                    <tbody>\n                                        {distance_array_LOS.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Distance to Tx  :</td>\n                                                <td>{item} [m]  </td>\n                                            </tr>\n                                        )}\n                                        {power_LOS.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Power LOS :</td>\n                                                <td>{item}  </td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </table>\n\n                            </div >\n                        } </Popup>\n                    </Polyline>\n                    }\n\n\n                    {item.polysR.length > 0 && <Polyline key={`selectedPointR${item.name} `} positions={[item.polysR]}\n                        color={'yellow'}\n                        weight={3}\n                        opacity={0.2}\n                        smoothFactor={5}\n                    >\n                        <Popup key={`popupR ${item.name} `} >{\n                            <div className=\"popup\">\n                                <table >\n                                    <tbody>\n                                        {distance_array_polyR.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Distance to Tx {index} :</td>\n                                                <td>{item} [m]  </td>\n                                            </tr>\n                                        )}\n                                        {power_arry_without_losR.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Power {index} :</td>\n                                                <td>{item}  </td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </table>\n\n                            </div >\n                        } </Popup>\n                    </Polyline>\n                    }\n                    {item.polysD.length > 0 && <Polyline key={`selectedPointD${item.name} `} positions={[item.polysD]}\n                        color={'orange'}\n                        weight={3}\n                        opacity={0.2}\n                        smoothFactor={5}\n                    >\n                        <Popup key={`popupD ${item.name} `} >{\n                            <div className=\"popup\">\n                                <table >\n                                    <tbody>\n                                        {distance_array_polyD.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Distance to Tx {index} :</td>\n                                                <td>{item} meter  </td>\n                                            </tr>\n                                        )}\n                                        {power_arry_without_losD.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>Power {index} :</td>\n                                                <td>{item}  </td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </table>\n\n                            </div >\n                        } </Popup>\n                    </Polyline>\n                    }\n                </Circle >)}\n            </LeafletMap>\n        </div >\n    );\n}\nexport default Map;\n\n\n\n\n\n\n\n","import {\n    Button,\n    Navbar, Collapse, Spinner\n} from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport cdf from 'cumulative-distribution-function';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, CartesianGrid,\n    ResponsiveContainer, Tooltip, LineChart, Line\n} from 'recharts';\nimport \"../../App.css\";\nimport uuid from 'react-uuid';\n\nfunction Chart(props) {\n    const [dCdf, setDCdf] = useState([])\n    const [dCCdf, setDCCdf] = useState([])\n    const [d, setD] = useState([])\n    const [y, setYarray] = useState([])\n    const [x, setXarray] = useState([])\n    const [namey, setNamey] = useState(\"\")\n    const [dataKey, setDataKey] = useState(\"\")\n    const [valuey, setValuey] = useState(\"\")\n    const [namescatterr, setNamescatterr] = useState(\"\")\n    const [datachart, setDatachart] = useState([])\n    const [domain, setDomain] = useState()\n    const [selectedchart, setSelectedchart] = useState('')\n    const [namescatter, setNameScatter] = useState('')\n    const [nameScatterCdf, setNameScatterCdf] = useState('')\n    const [nameScatterCCdf, setNameScatterCCdf] = useState('')\n    const [selectedValuex, setSelectedValuex] = useState('')\n    const [selectedValuey, setSelectedValuey] = useState('')\n    const [collapse, setCollapse] = useState(true);\n    const [status, setStatus] = useState(namescatterr);\n    const [colorr, setColor] = useState(\"\")\n    const [colorr1, setColor1] = useState(\"\")\n    useEffect(() => {\n        if (selectedchart === \"Scatter Chart\") {\n            setDataKey(\"y\");\n            setNamey(selectedValuey);\n            setValuey(selectedValuey);\n            setNamescatterr(namescatter);\n            setDatachart(d)\n        }\n        else if (selectedchart === \"CDF Chart\") {\n            setDataKey(\"CDF\");\n            setNamey(\"CDF\");\n            setValuey(\"CDF\");\n            setNamescatterr(nameScatterCdf);\n            setDatachart(dCdf);\n            setDomain([0, 1])\n        }\n        else if (selectedchart === \"C-CDF Chart\") {\n            setDataKey(\"C-CDF\");\n            setNamey(\"C-CDF\");\n            setValuey(\"C-CDF\");\n            setNamescatterr(nameScatterCCdf);\n            setDatachart(dCCdf);\n            setDomain([0, 1])\n        }\n\n    }, [selectedchart, selectedValuey, namescatter, d, nameScatterCdf, dCdf, nameScatterCCdf, dCCdf])\n\n    useEffect(() => {\n        const arrayChart = [];\n        for (let i = 0; i < x.length; i++) {\n            arrayChart.push({ 'x': x[i], 'y': y[i] })\n            setD(arrayChart)\n        }\n    }, [x, y])\n    useEffect(() => {\n        const mycdf = cdf(x);\n        const cdfx = mycdf.xs()\n        const cdfy = mycdf.ps()\n        const array = cdfx.map((v, i) => ({ 'x': v, 'CDF': cdfy[i] }));\n        setDCdf(array)\n    }, [x])\n    useEffect(() => {\n        const myccdf = cdf(x);\n        const ccdfx = myccdf.xs()\n        const ccdfy = myccdf.ps()\n        const arrayc = ccdfx.map((v, i) => ({ 'x': v, 'C-CDF': 1 - ccdfy[i] }));\n        setDCCdf(arrayc)\n    }, [x])\n\n    useEffect(() => {\n        if (!props.x) {\n            return\n        };\n        setXarray(props.x);\n        setYarray(props.y);\n        setSelectedchart(props.selectedchart)\n        setColor1(props.colorr1)\n        setColor(props.colorr)\n        if (!props.selectedValuex) {\n            return\n        };\n        // to make capital letters in x axis in the chart\n        if (Object.keys(props.selectedValuex).length > 3) {\n            setSelectedValuex(\n                props.selectedValuex.slice(0, 1).toUpperCase() +\n                props.selectedValuex.slice(1, props.selectedValuex.length)\n            );\n        }\n        else if (Object.keys(props.selectedValuex).length === 3) {\n            setSelectedValuex(\n                props.selectedValuex.slice(0, 1).toUpperCase() +\n                props.selectedValuex.slice(1, 2) +\n                props.selectedValuex.slice(2).toUpperCase()\n            );\n        }\n        setSelectedValuey(props.selectedValuey.slice(0, 1).toUpperCase() +\n            props.selectedValuey.slice(1, props.selectedValuey.length));\n\n        setNameScatter(props.selectedValuex.slice(0, 1).toUpperCase() +\n            props.selectedValuex.slice(1, props.selectedValuex.length)\n            + '/' + props.selectedValuey.slice(0, 1).toUpperCase() +\n            props.selectedValuey.slice(1, props.selectedValuey.length))\n\n        setNameScatterCdf(props.selectedValuex.slice(0, 1).toUpperCase() +\n            props.selectedValuex.slice(1, props.selectedValuex.length) + '/CDF')\n\n        setNameScatterCCdf(props.selectedValuex.slice(0, 1).toUpperCase() +\n            props.selectedValuex.slice(1, props.selectedValuex.length) + '/C-CDF')\n    }, [props.x, props.y, props.selectedValuex, props.selectedValuey, props.selectedchart, props.colorr, props.colorr1]);\n\n    const onEntering = () => setStatus(<Spinner size=\"sm\" color=\"light\" />);\n    const onEntered = () => setStatus(namescatterr);\n    const onExiting = () => setStatus(<Spinner size=\"sm\" color=\"light\" />)\n    const onExited = () => setStatus(namescatterr);\n    const toggle = () => setCollapse(!collapse);\n    const deleteChart = () => props.deleteChart(props.index)\n    let colo = ''\n    if (colorr1 !== undefined) { colo = colorr1 }\n    if (colorr !== undefined) { colo = colorr }\n    return (\n        <>\n\n            <div id={uuid()} className=\"openandclosechart\">\n                <Navbar className=\"nav\" expand=\"sm\">\n                    <h5>{status}</h5>\n                    <Button className=\"btn_in_nav_chart\" size=\"sm\" dark=\"true\" onClick={toggle} >\n                        {collapse ? onExited && <i className=\"arrow up\"></i> : <i className=\"arrow down\"></i>}\n                    </Button>\n                    <Button className=\"trash_btn\" size=\"sm\" dark=\"true\"\n                        onClick={() => deleteChart()} >\n                        <i className=\"fa fa-trash\"></i>\n                    </Button>\n                </Navbar>\n                <Collapse\n                    isOpen={collapse}\n                    onEntering={onEntering}\n                    onEntered={onEntered}\n                    onExiting={onExiting}\n                    onExited={onExited}\n                >\n                    <div className=\"chart\">\n                        {(dataKey !== 'y') &&\n                            <ResponsiveContainer >\n                                <LineChart\n                                    width={450}\n                                    height={400}\n                                    data={datachart}\n                                    name={namey}\n                                    margin={{\n                                        top: 20, right: 20, bottom: 30, left: 20,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis\n                                        type=\"number\"\n                                        dataKey={'x'}\n                                        style={{ fontSize: '0.8rem', fontFamily: 'Arial' }}\n                                        stroke=\"white\" axisLine={false}\n                                        tickLine={false}\n                                        label={{\n                                            fontSize: '1.5rem', fontFamily: 'Arial', fill: '#ffffff',\n                                            value: selectedValuex, position: 'insideBottom', offset: -12\n                                        }}\n                                    />\n                                    <YAxis\n                                        type=\"number\"\n                                        dataKey={namey}\n                                        style={{ fontSize: '0.8rem', fontFamily: 'Arial' }}\n                                        stroke=\"white\" axisLine={false}\n                                        tickLine={false}\n                                        tickCount={20}\n                                        domain={domain}\n                                        label={{\n                                            fontSize: '1.5rem', fontFamily: 'Arial', fill: '#ffffff',\n                                            value: valuey, angle: -90, position: 'left', dy: -70\n                                        }} />\n\n                                    <Tooltip wrapperStyle={{ width: 'auto', color: \"#000000\" }} cursor={{ strokeDasharray: '3 3' }} />\n                                    <Line dataKey={dataKey}\n                                        dot={false}\n                                        activeShape={false} type=\"monotone\" activeDot={{ r: 3 }} stroke={colo} />\n                                </LineChart>\n                            </ResponsiveContainer >}\n\n                        {dataKey === 'y' &&\n                            <ResponsiveContainer >\n                                < ScatterChart\n                                    data={datachart}\n                                    width={450}\n                                    height={400}\n                                    margin={{\n                                        top: 20, right: 20, bottom: 30, left: 20,\n                                    }}\n                                >\n                                    <CartesianGrid />\n                                    <XAxis type=\"number\" dataKey={'x'} name={selectedValuex}\n                                        style={{ fontSize: '0.8rem', fontFamily: 'Arial' }}\n                                        stroke=\"white\" axisLine={false}\n                                        tickLine={false}\n                                        tickCount={20}\n                                        label={{\n                                            fontSize: '1.5rem', fontFamily: 'Arial', fill: '#ffffff',\n                                            value: selectedValuex, position: 'insideBottom', offset: -12\n                                        }}\n                                    />\n                                    <YAxis type=\"number\"\n                                        dataKey={dataKey} name={namey}\n                                        style={{ fontSize: '0.8rem', fontFamily: 'Arial' }}\n                                        stroke=\"white\" axisLine={false}\n                                        tickLine={false}\n                                        tickCount={20}\n                                        domain={domain}\n\n                                        label={{\n                                            fontSize: '1.5rem', fontFamily: 'Arial', fill: '#ffffff',\n                                            value: valuey, angle: -90, position: 'left', dy: -70\n                                        }} />\n                                    <Tooltip wrapperStyle={{ width: 'auto', color: \"#000000\" }} cursor={{ strokeDasharray: '3 3' }} />\n                                    <Scatter activeDot name={namescatterr} data={datachart} fill={colo} />\n                                </ScatterChart>\n                            </ResponsiveContainer>\n                        }\n                    </div>\n                </Collapse>\n            </div>\n        </>\n    );\n}\nexport default Chart;\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport {\n    Input, FormGroup, DropdownItem, Button, ButtonGroup,\n    Navbar, Collapse, Spinner\n\n} from 'reactstrap';\nimport uuid from 'react-uuid';\nimport Chart from \"./Charts\";\nimport * as turf from \"@turf/turf\";\nfunction Evaluation(props) {\n    //Split Down Button for Evaluation\n\n    const options = { units: \"meters\" };\n    const paths = []\n    const [points, setPoints] = useState([]);\n    const [id, setIdPoint] = useState(null);\n    const [transmitter, setTransmitter] = useState([]);\n    // const [savepoint, setSavedPoint] = useState([])\n    const [final_keys, setFinal_Keys] = useState([]);\n    const [selectedValuex, setSelectedValuex] = useState('Av_Power_Points')\n    const [selectedValuey, setSelectedValuey] = useState('Av_Power_Points')\n    const [returnn, setReturnn] = useState(false)\n    const [selectedchart, setSelectedchart] = useState(\"CDF Chart\")\n    const [collapse, setCollapse] = useState(true);\n    const [status, setStatus] = useState('Evaluation all Points ')\n    let [newchart, setNewchart] = useState([])\n    let [colorr, setColorr] = useState(\"\")\n\n    let calculatedcharts_all_points = {};\n    const calculated_data_one_point_for_popup = []\n    const calculated_Data_all_points_for_charts = [];\n\n    useEffect(() => {\n        if (!props.points) {\n            return\n        }\n        setPoints(props.points);\n        setIdPoint(props.idd);\n        setTransmitter(props.tx);\n\n    }, [props.points, props.idd, props.tx]);\n\n    // this function select all points and calculate their data\n    const distance_all_points = []\n    const delaySpreadd = []\n    // const aoaSpreadd = []\n    const aoaSpreadd1 = []\n\n    // const aodSpreadd = []\n    const aodSpreadd1 = []\n    const avg_delay_all_pointss = []\n    const avg_power_all_pointss = []\n    const avg_strength_all_pointss = []\n    const mu0_aoa = []\n    const mu0_aod = []\n    const numberofpaths = []\n\n    for (let i = 0; i < points.length; i++) {\n        let los = [[points[i].position.lat, points[i].position.lon], transmitter];\n        const toLos = turf.lineString(los);\n        const distance = turf.length(toLos, options);\n        distance_all_points.push(distance);\n        const delay_arrayy = []\n        const strength_array_one_point = []\n        const dl_by_st_one_point = []\n        const sq_delay_by_strength_one_point = []\n        const power_array_mw_one_point = []\n        const sq_st_array_one_point = []\n        const aoa_by_st_one_point = [];\n        const sq_aoa_by_strength_one_point = [];\n        const aoa_array = [];\n        const aod_by_st_one_point = [];\n        const sq_aod_by_strength_one_point = [];\n        const aod_array = [];\n        numberofpaths.push(points[i].paths.length)\n\n        for (let j = 0; j < points[i].paths.length; j++) {\n\n            delay_arrayy.push(points[i].paths[j].delay / 1000);\n\n            strength_array_one_point.push(points[i].paths[j].field_strength);\n            //The Math.pow() function returns the base to the exponent power, that is, base ^exponent.\n            sq_st_array_one_point.push(Math.pow(points[i].paths[j].field_strength, 2));\n\n            power_array_mw_one_point.push(Math.pow(10, (points[i].paths[j].power / 10)));\n\n            dl_by_st_one_point.push((points[i].paths[j].delay / 1000) * points[i].paths[j].field_strength);\n            sq_delay_by_strength_one_point.push(Math.pow((points[i].paths[j].delay / 1000), 2) * points[i].paths[j].field_strength);\n\n            if (points[i].paths[j].num_of_interactions > 0) {\n\n                aoa_array.push(points[i].paths[j].interactions[0]['aoa']);\n\n                aoa_by_st_one_point.push(points[i].paths[j].interactions[0]['aoa'] * points[i].paths[j].field_strength);\n\n                sq_aoa_by_strength_one_point.push(Math.pow(points[i].paths[j].interactions[0]['aoa'], 2) * points[i].paths[j].field_strength);\n\n                aod_array.push(points[i].paths[j].interactions[0]['aod']);\n                aod_by_st_one_point.push(points[i].paths[j].interactions[0]['aod'] * points[i].paths[j].field_strength);\n                sq_aod_by_strength_one_point.push(Math.pow(points[i].paths[j].interactions[0]['aod'], 2) * points[i].paths[j].field_strength);\n                mu0_aoa.push(points[i].paths[j].interactions[0]['aoa'] - ((points[i].paths[j].interactions[0]['aoa'] * points[i].paths[j].field_strength) / strength_array_one_point.reduce((p, c) => c + p, 0)));\n                mu0_aod.push(points[i].paths[j].interactions[0]['aod'] - ((points[i].paths[j].interactions[0]['aod'] * points[i].paths[j].field_strength) / strength_array_one_point.reduce((p, c) => c + p, 0)));\n\n            }\n\n        }\n\n\n        //Calculate  delay power of all points:\n        const sum_delay_all_points = delay_arrayy.reduce((p, c) => c + p, 0);\n        const avg_delay_all_points = sum_delay_all_points / delay_arrayy.length;\n\n        //Calculate  average power of all points:\n        const sum_power_all_points = power_array_mw_one_point.reduce((p, c) => c + p, 0);\n        const avg_power_all_points = 10 * Math.log10(sum_power_all_points / power_array_mw_one_point.length);\n\n        //Calculate  average strength of all points:\n        const sum_strength_all_points = sq_st_array_one_point.reduce((p, c) => c + p, 0);\n        const avg_strength_all_points = Math.sqrt(sum_strength_all_points / strength_array_one_point.length);\n\n        //calculate the delay spread\n        const expectation_delay = dl_by_st_one_point.reduce((p, c) => c + p, 0) / strength_array_one_point.reduce((p, c) => c + p, 0);\n        const expectation_delay_sq = sq_delay_by_strength_one_point.reduce((p, c) => c + p, 0) / strength_array_one_point.reduce((p, c) => c + p, 0);\n        const delaySpread = Math.sqrt(expectation_delay_sq - Math.pow(expectation_delay, 2));\n\n        //calculate the Angular spread\n\n        const teta_mu_Aoa = (mu0_aoa[i] + 180) % 360 - 180\n\n        // const teta_mu_Aoa = mu0_aoa[i] - 180\n        const tetamu_sqrt_str_Aoa = Math.pow(teta_mu_Aoa, 2) * strength_array_one_point.reduce((previous, current) => current + previous, 0)\n        const sigma_aoa = Math.sqrt(tetamu_sqrt_str_Aoa / sq_st_array_one_point.reduce((p, c) => c + p, 0))\n        // console.log(sigma_aoa)\n\n        const teta_mu_Aod = (mu0_aod[i] + 180) % 360 - 180\n        const tetamu_sqrt_str_Aod = Math.pow(teta_mu_Aod, 2) * strength_array_one_point.reduce((previous, current) => current + previous, 0)\n        const sigma_aod = Math.sqrt(tetamu_sqrt_str_Aod / sq_st_array_one_point.reduce((p, c) => c + p, 0))\n\n        avg_power_all_pointss.push(avg_power_all_points)\n        avg_delay_all_pointss.push(avg_delay_all_points)\n        avg_strength_all_pointss.push(avg_strength_all_points)\n        delaySpreadd.push(delaySpread)\n\n        // aoaSpreadd.push(aoaSpread)\n        aoaSpreadd1.push(sigma_aoa)\n\n        // aodSpreadd.push(aodSpread)\n        aodSpreadd1.push(sigma_aod)\n        calculatedcharts_all_points = {\n            Av_Power_Points: avg_power_all_pointss,\n            Av_Strength_Points: avg_strength_all_pointss,\n            Av_Delay_Points: avg_delay_all_pointss,\n            Distance_Points: distance_all_points,\n            DelaySpread_Points: delaySpreadd,\n            AoA_Spread: aoaSpreadd1,\n            AoD_Spread: aodSpreadd1,\n            Number_of_Paths: numberofpaths,\n\n\n\n        }\n    }\n\n    points.map(function (item) {\n        if (id === item.point_id) {\n            paths.push(item.paths)\n        } return null\n    })\n\n    const calculated_Data_all_keys = []\n    calculated_Data_all_points_for_charts.push(calculatedcharts_all_points)\n\n    // set keys to display in dropdown button x and y\n    const KeysFunction = event => {\n        props.evaluationn(calculated_data_one_point_for_popup);\n        calculated_Data_all_keys.push(Object.keys(calculated_Data_all_points_for_charts[0]))\n        setFinal_Keys([...calculated_Data_all_keys[0]])\n    }\n    function handleChangex(event) { setSelectedValuex(event.target.value) }\n    function handleChangey(event) { setSelectedValuey(event.target.value) }\n    const x = []\n    const y = []\n\n    const clearStateAlert = () => setReturnn(false); if (returnn === true) { alert(\"Please select another option from the drop down !\"); clearStateAlert() }\n    function xFunction() {\n\n        if (final_keys.includes(selectedValuex)) {\n            const filteredd = calculated_Data_all_points_for_charts.filter(function (el) { return el !== null; })\n            filteredd.forEach(function (j) { if (j[selectedValuex] !== undefined) { for (let i = 0; i < j[selectedValuex].length; i++) { x.push(j[selectedValuex][i]) } } })\n        }\n    }\n\n    function yFunction() {\n        if (final_keys.includes(selectedValuey)) {\n            const filteredd = calculated_Data_all_points_for_charts.filter(function (el) { return el !== null; })\n            filteredd.forEach(function (j) { if (j[selectedValuey] !== undefined) { for (let i = 0; i < j[selectedValuey].length; i++) { y.push(j[selectedValuey][i]) } } })\n        }\n    }\n    function handleChangetypeofchart(event) { setSelectedchart(event.target.value) }\n\n    const onOpening = () => setStatus(<Spinner size=\"sm\" color=\"light\" />);\n    const onOpen = () => setStatus('Evaluation Window all Points');\n    const onClosing = () => setStatus(<Spinner size=\"sm\" color=\"light\" />)\n    const onClosed = () => setStatus('Click to Evaluate all Points');\n    const toggle = () => setCollapse(!collapse);\n    function createNewNewChart() {\n        setColorr('blue')\n        // setSavedPoint([...savepoint, ...save])\n        setNewchart(p => [...p, {\n            selectedchart,\n            x,\n            y,\n            selectedValuex,\n            selectedValuey,\n        }]);\n    }\n\n    //This function create a duplicate of newchart in copyNewchart after delete the selected object using the index after reset the newchart\n    const deleteChart = (index) => {\n        const copyNewchart = Object.assign([], newchart);\n        copyNewchart.splice(index, 1);\n        setNewchart(newchart = copyNewchart)\n    };\n\n    return (\n        <>\n            <div id={uuid()} className=\"openandclosebuttonnav\">\n                <Navbar className=\"nav_button\" expand=\"sm\">\n                    <div className=\"headernav1\" > {status}</div>\n                    <Button className=\"btn_in_nav_button1\" size=\"sm\" dark=\"true\" onClick={toggle} >\n                        {collapse ? onClosed && <i className=\"arrow up\"></i> : <i className=\"arrow down\"></i>}\n                    </Button>\n                </Navbar>\n                <Collapse className=\"Collapse\"\n\n                    isOpen={collapse}\n                    onEntering={onOpening}\n                    onEntered={onOpen}\n                    onExiting={onClosing}\n                    onExited={onClosed}\n                >\n                    <div className=\"windowbutton\" >\n                        <ButtonGroup className=\"button\" size=\"sm\">\n                            <FormGroup >\n                                <DropdownItem header>\n                                    <div className=\"headerdropdownitem\" >Select type of chart </div >\n                                </DropdownItem>\n                                <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name=\"select\" id=\"selectchart\" defaultChecked\n                                    value={selectedchart} onChange={handleChangetypeofchart} >\n                                    <option color=\"dark\" >CDF Chart</option>\n                                    <option color=\"dark\"  >C-CDF Chart</option>\n                                    <option color=\"dark\"  >Scatter Chart</option>\n\n                                </Input>\n                            </FormGroup>\n                        </ButtonGroup>\n\n                        <ButtonGroup className=\"buttonx\" size=\"sm\">\n                            <FormGroup >\n                                <DropdownItem header color=\"dark\" ><div className=\"headerdropdownitem\" > Select X Axis </div ></DropdownItem>\n                                <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name='select' id=\"xSelect\" defaultChecked\n                                    value={selectedValuex}\n                                    onClick={KeysFunction}\n                                    onChange={handleChangex}\n                                    placeholder=\"Check it out\"  >\n                                    {final_keys.length > 0 ? final_keys.map((item1, index1) => <option color=\"dark\" key={index1} >{item1}</option>) : <option color=\"dark\"  >Double Click</option>}\n                                </Input>\n\n                            </FormGroup>\n\n                            {selectedchart === \"Scatter Chart\" ?\n                                < FormGroup >\n                                    <DropdownItem header color=\"dark\"><div className=\"headerdropdownitem\" >Select Y Axis </div > </DropdownItem>\n                                    <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name=\"select\" id=\"ySelect\" defaultChecked\n                                        value={selectedValuey}\n                                        onClick={KeysFunction}\n                                        onChange={handleChangey} >\n                                        {final_keys.length > 0 && final_keys.map((item, index) => <option color=\"dark\" key={index} >{item}</option>)}\n                                    </Input>\n                                </FormGroup> : ''}\n                        </ButtonGroup>\n\n                        {<ButtonGroup className=\"buttonevaluation\" size=\"sm\">\n                            <FormGroup>\n                                <Button onClick={() => { xFunction(); yFunction(); createNewNewChart() }} >Start Evaluation</Button>\n                            </FormGroup>\n                        </ButtonGroup>}\n\n                    </div>\n                </Collapse>\n            </div>\n\n            <Collapse className=\"Collapse\"\n\n                isOpen={collapse}\n                onEntering={onOpening}\n                onEntered={onOpen}\n                onExiting={onClosing}\n                onExited={onClosed}\n            >\n                <div className=\"window\">\n\n                    {newchart.map(({ x, y, selectedValuex, selectedValuey, selectedchart }, index) => (\n                        <Chart key={uuid()} x={x} y={y} selectedValuex={selectedValuex} colorr={colorr}\n                            selectedValuey={selectedValuey} selectedchart={selectedchart} deleteChart={() => deleteChart(index)} />\n                    ))}\n\n                </div>\n            </Collapse>\n\n        </>\n    );\n}\nexport default Evaluation;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport {\n  ListGroupItem, Button, Navbar, Collapse, Spinner\n} from 'reactstrap';\n\nconst ADD_REQUEST = gql`\nmutation createRequest($content: String!, $serviceID: String!) {\n  createRequest(\n    input: {\n      contentType: \"application/json\"\n      serviceID: $serviceID\n      content: $content\n      acceptContentType: \"application/json\"\n      forceUpdate: true\n    }\n  ) {\n    id\n    status\n  }\n}\n  \n`;\n\nfunction AddRequest(props) {\n  const [files, setFiles] = useState([])\n  useEffect(() => {\n    if (!props.files) {\n      return\n    }\n    setFiles(props.files);\n  }, [props.files]);\n\n  const [addRequest] = useMutation(ADD_REQUEST);\n\n  const [selectedNameOfFile, setSelectedNameOfFile] = useState('BMW_Altair')\n\n\n  function handleChange(event) { setSelectedNameOfFile(event.target.value) }\n\n  const handleAddRequest = (event) => {\n    addRequest({\n      variables: {\n        serviceID: \"service_sum\", content: selectedNameOfFile\n      },\n    });\n  };\n\n\n  const [collapse, setCollapse] = useState(false);\n  const [status, setStatus] = useState('Scenarios ');\n  const onOpening = () => setStatus(<Spinner size=\"sm\" color=\"light\" />);\n  const onOpen = () => setStatus('Please Choose Scenario');\n  const onClosing = () => setStatus(<Spinner size=\"sm\" color=\"light\" />)\n  const onClosed = () => setStatus('Scenarios');\n  const toggle = () => setCollapse(!collapse);\n\n\n  return (\n    <>\n      <div className=\"openandclosebuttonnavrequest\">\n        <Button className=\"buttomgetscenario\" onClick={handleAddRequest} > Click here to Start </Button>\n        <Navbar className=\"nav_button1\" expand=\"sm\">\n          <div className=\"headernav1\" > {status}</div>\n          <Button className=\"btn_in_nav_button1\" size=\"sm\" dark=\"true\" onClick={() => { toggle(); props.handleAddRequest11() }} >\n            {collapse ? onClosed && <i className=\"arrow up\"></i> : <i className=\"arrow down\"></i>}\n          </Button>\n        </Navbar>\n        <Collapse\n          isOpen={collapse}\n          onEntering={onOpening}\n          onEntered={onOpen}\n          onExiting={onClosing}\n          onExited={onClosed}\n        >\n          <Navbar expand=\"md\">\n            <div className=\"getscenario\" >\n              {files.length > 0 && files.map((item, index1) =>\n                < ListGroupItem action tag=\"button\" className=\"btn_in_window_evaluation\" type=\"select\" name='select' id=\"Select\" color=\"dark\"\n                  value={item} key={index1} onClick={handleChange}> {item}\n                </ListGroupItem>)}\n            </div >\n\n          </Navbar>\n        </Collapse>\n      </div>\n\n    </>\n  );\n}\nexport default AddRequest;\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport AddRequest from \"./GetPointsData\";\n\nconst ADD_REQUEST = gql`\nmutation createRequest($content: String!, $serviceID: String!) {\n  createRequest(\n    input: {\n      contentType: \"application/json\"\n      serviceID: $serviceID\n      content: $content\n      acceptContentType: \"application/json\"\n      forceUpdate: true\n    }\n  ) {\n    id\n    status\n  }\n}\n  \n`;\nfunction GetScenario(props) {\n    const [files, setFiles] = useState([]);\n    useEffect(() => {\n        if (!props.files) {\n            return\n        }\n        setFiles(props.files);\n    }, [props.files]);\n\n\n    const [addRequest1] = useMutation(ADD_REQUEST);\n    const handleAddRequest1 = (event) => {\n        addRequest1({\n            variables: {\n                serviceID: \"service_sum\", content: 'getnameoffiles'\n            },\n        });\n    };\n\n    return (\n        <>\n            <div className=\"windowaddrequest1\" >\n                <div><AddRequest files={files} handleAddRequest11={handleAddRequest1} /></div>\n            </div>\n        </>\n    );\n}\nexport default GetScenario;\n","\nimport React from 'react';\nimport { CSVLink } from 'react-csv';\nimport { Button } from 'reactstrap';\n\nexport const ExportReactCSV = ({ csvData, fileName }) => {\n    return (\n        <Button color=\"info\" >\n            <CSVLink data={csvData} filename={fileName}>Export</CSVLink>\n        </Button>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport {\n    Input, FormGroup, DropdownItem, Button, ButtonGroup,\n    Navbar, Collapse, Spinner\n\n} from 'reactstrap';\nimport * as turf from \"@turf/turf\";\nimport { ExportReactCSV } from '../ExportCsv';\nimport Chart from \"./Charts\";\nimport uuid from 'react-uuid';\n\nfunction OnePoint(props) {\n    //Split Down Button for Evaluation\n    const delay_array = [];\n    const strength_array = [];\n    const sq_st_ar = [];\n    const dl_by_st = [];\n    const sq_delay_by_strength = [];\n    const sq_delay_by_power_array = [];\n    const relative_delay = [];\n    const relative_strength = [];\n    const aoa_by_st = [];\n    const sq_aoa_by_strength = [];\n    const aoa_array = [];\n    const aod_by_st = [];\n    const sq_aod_by_strength = [];\n    const aod_array = [];\n    const pathloss = []\n    const power_array = [];\n    const power_array_mw = [];\n    const path_distance = [];\n    const los_distance = []\n    const options = { units: \"meters\" };\n    const paths = []\n    const [points, setPoints] = useState([]);\n    const [idd, setIdPoint] = useState(null);\n    const [tx, setTransmitter] = useState([]);\n    const [selectedPoint, setSelectedPoint] = useState(false)\n    const [final_keys, setFinal_Keys] = useState([]);\n    const [selectedValuex, setSelectedValuex] = useState('aoa')\n    const [selectedValuey, setSelectedValuey] = useState('aoa')\n    const [returnn, setReturnn] = useState(false)\n    const [selectedchart, setSelectedchart] = useState(\"CDF Chart\")\n    const [status, setStatus] = useState('Select a Point to Evaluate ')\n    const [collapse, setCollapse] = useState(true);\n    const ASA = []\n    const ASD = []\n    const mu0_aoa = []\n    const aoaSpreadd1 = []\n    let [colorr1, setColorr1] = useState(\"\");\n    const polylines = []\n    let calculatedcharts = {}\n    let calculatedpopup = {}\n    const calculated_data_one_point_for_popup = []\n    const calculated_Data_one_point_for_charts = []\n    const [calculatedall, setCalculatedall] = useState([]);\n    const relative_power = []\n    const relative_power_procent = []\n    useEffect(() => {\n        if (!props.points) {\n            return\n        }\n        setPoints(props.points);\n        setIdPoint(props.idd);\n        setTransmitter(props.tx);\n\n        if (props.idd !== null) {\n            setSelectedPoint(true);\n        }\n        setCalculatedall(props.calculated_Data_all_points_for_charts)\n    }, [props.points, props.idd, props.tx, props.calculated_Data_all_points_for_charts]);\n\n    points.map(function (item) {\n        if (idd === item.point_id) {\n            paths.push(item.paths)\n        } return null\n    })\n    // this function calculate  data for one point\n    points.forEach(d => {\n        if (idd === d.point_id) {\n            const selectedPoint = [d.position.lat, d.position.lon]\n            let polyline_0 = [selectedPoint, tx];\n            const toPoly_0 = turf.lineString(polyline_0);\n            const distancePoly_0 = turf.length(toPoly_0, options);\n            los_distance.push(distancePoly_0);\n            for (let i = 0; i < d.paths.length; i++) {\n\n                if (d.paths[i].field_strength === \"\") {\n                    delay_array.push(d.paths[i].delay / 1000);\n\n                    strength_array.push(d.paths[i].PathLoss)\n                    //The Math.pow() function returns the base to the exponent power, that is, base ^exponent.\n                    sq_st_ar.push(Math.pow(d.paths[i].PathLoss, 2));\n                    dl_by_st.push((d.paths[i].delay / 1000) * d.paths[i].PathLoss);\n                    sq_delay_by_strength.push(Math.pow((d.paths[i].delay / 1000), 2) * d.paths[i].PathLoss);\n                    power_array_mw.push(Math.pow(10, (d.paths[i].power / 10)));\n                    power_array.push(d.paths[i].power);\n\n                    if (d.paths[i].num_of_interactions > 0 && selectedPoint.length > 0) {\n                        d.paths[i].interactions.forEach(j => {\n                            const polyline = [selectedPoint, [j.position.lat, j.position.lon], tx];\n                            polylines.push(polyline);\n                            const toPoly = turf.lineString(polyline);\n                            const distancePoly = turf.length(toPoly, options);\n                            path_distance.push(Math.floor(distancePoly));\n                        });\n                        aoa_array.push(d.paths[i].interactions[0]['aoa']);\n                        aoa_by_st.push(d.paths[i].interactions[0]['aoa'] * d.paths[i].PathLoss);\n                        sq_aoa_by_strength.push(Math.pow(d.paths[i].interactions[0]['aoa'], 2) * d.paths[i].PathLoss);\n\n                        aod_array.push(d.paths[i].interactions[0]['aod']);\n                        aod_by_st.push(d.paths[i].interactions[0]['aod'] * d.paths[i].PathLoss);\n                        sq_aod_by_strength.push(Math.pow(d.paths[i].interactions[0]['aod'], 2) * d.paths[i].PathLoss);\n                    }\n                    else {\n                        const selectedPoint = [d.position.lat, d.position.lon]\n                        let polyline_0 = [selectedPoint, tx];\n                        const toPoly_0 = turf.lineString(polyline_0);\n                        const distancePoly_0 = turf.length(toPoly_0, options);\n                        path_distance.push(distancePoly_0);\n\n                    }\n                }\n                else {\n                    delay_array.push(d.paths[i].delay / 1000);\n                    strength_array.push(d.paths[i].field_strength);\n                    //The Math.pow() function returns the base to the exponent power, that is, base ^exponent.\n                    sq_st_ar.push(Math.pow(d.paths[i].field_strength, 2));\n                    dl_by_st.push((d.paths[i].delay / 1000) * d.paths[i].field_strength);\n                    sq_delay_by_strength.push(Math.pow((d.paths[i].delay / 1000), 2) * d.paths[i].field_strength);\n                    sq_delay_by_power_array.push(Math.pow((d.paths[i].delay / 1000), 2) * d.paths[i].power);\n                    power_array_mw.push(Math.pow(10, (d.paths[i].power / 10)));\n                    power_array.push(d.paths[i].power);\n                    pathloss.push(d.paths[i].PathLoss)\n                }\n                if (d.paths[i].num_of_interactions > 0 && selectedPoint.length > 0) {\n                    d.paths[i].interactions.forEach(j => {\n                        const polyline = [selectedPoint, [j.position.lat, j.position.lon], tx];\n                        polylines.push(polyline);\n                        const toPoly = turf.lineString(polyline);\n                        const distancePoly = turf.length(toPoly, options);\n                        path_distance.push(Math.floor(distancePoly));\n                    });\n                    aoa_array.push(d.paths[i].interactions[0]['aoa']);\n                    aoa_by_st.push(d.paths[i].interactions[0]['aoa'] * d.paths[i].field_strength);\n                    sq_aoa_by_strength.push(Math.pow(d.paths[i].interactions[0]['aoa'], 2) * d.paths[i].field_strength);\n                    mu0_aoa.push(d.paths[i].interactions[0]['aoa'] - ((d.paths[i].interactions[0]['aoa'] * d.paths[i].field_strength) / strength_array.reduce((p, c) => c + p, 0)));\n                    aod_array.push(d.paths[i].interactions[0]['aod']);\n                    aod_by_st.push(d.paths[i].interactions[0]['aod'] * d.paths[i].field_strength);\n                    sq_aod_by_strength.push(Math.pow(d.paths[i].interactions[0]['aod'], 2) * d.paths[i].field_strength);\n                }\n                else {\n                    const selectedPoint = [d.position.lat, d.position.lon]\n                    let polyline_0 = [selectedPoint, tx];\n                    const toPoly_0 = turf.lineString(polyline_0);\n                    const distancePoly_0 = turf.length(toPoly_0, options);\n                    path_distance.push(distancePoly_0);\n\n                }\n                //The Math.sqrt() function returns the square root of a number//\n                //The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value. //\n                //Calculate delay and average of delay:\n                const sum_delay = delay_array.reduce((previous, current) => current + previous, 0);\n                const avg_delay = sum_delay / delay_array.length;\n                relative_delay.push(delay_array[i] / sum_delay)\n                //Calculate power and average of power:\n                const sum_power = power_array_mw.reduce((previous, current) => current + previous, 0);\n                const avg_power = 10 * Math.log10(sum_power / power_array_mw.length);\n                relative_power.push(power_array_mw[i] / sum_power)\n                relative_power_procent.push(Math.floor((power_array_mw[i] / sum_power) * 100));\n                console.log(relative_power_procent[i])\n                //calculate the delay spread\n                const expectation_delay = dl_by_st.reduce((previous, current) => current + previous, 0) / power_array.reduce((previous, current) => current + previous, 0);\n                const expectation_delay_sq = sq_delay_by_power_array.reduce((previous, current) => current + previous, 0) / power_array.reduce((previous, current) => current + previous, 0);\n                const delaySpread = Math.sqrt(expectation_delay_sq - Math.pow(expectation_delay, 2));\n\n                const expectation_delay1 = dl_by_st.reduce((previous, current) => current + previous, 0) / strength_array.reduce((previous, current) => current + previous, 0);\n                const expectation_delay_sq1 = sq_delay_by_strength.reduce((previous, current) => current + previous, 0) / strength_array.reduce((previous, current) => current + previous, 0);\n                const delaySpread1 = Math.sqrt(expectation_delay_sq1 - Math.pow(expectation_delay1, 2));\n\n                //Calculate strength and average of strength:\n                const sum_strength = strength_array.reduce((previous, current) => current + previous, 0);\n                const avg_strength = sum_strength / strength_array.length;\n                relative_strength.push(strength_array[i] / sum_strength)\n\n                //calculate the Angular spread\n                const teta_mu_Aoa = (mu0_aoa[i] + 180) % 360 - 180\n                const tetamu_sqrt_str_Aoa = Math.pow(teta_mu_Aoa, 2) * d.paths[i].field_strength\n                const sigma_aoa = Math.sqrt(tetamu_sqrt_str_Aoa / sum_strength)\n                aoaSpreadd1.push(sigma_aoa)\n\n                calculatedcharts = {\n                    Paths_Power: power_array,\n                    Paths_Strength: strength_array,\n                    Paths_Delay: delay_array,\n                    Paths_Distance: path_distance,\n                    PathLoss: pathloss,\n                }\n                calculatedpopup = {\n                    iddd: idd,\n                    avg_delay: avg_delay,\n                    avg_power: avg_power,\n                    avg_strength: avg_strength,\n                    delaySpread: delaySpread1,\n                    delaySpread1: delaySpread,\n                    aoaSpread: ASA,\n                    aodSpread: ASD,\n                    path_distance: los_distance,\n\n                }\n            }\n        }\n        calculated_Data_one_point_for_charts.push(calculatedcharts);\n        calculated_data_one_point_for_popup.push(calculatedpopup);\n    });\n\n    const save = []\n    const savepoint = [...save]\n\n    let savePopup = calculated_data_one_point_for_popup.filter(value => Object.keys(value).length !== 0)\n    let saveChart = calculated_Data_one_point_for_charts.filter(value => Object.keys(value).length !== 0)\n    // let saveall = calculatedall.filter(value => Object.keys(value).length !== 0)\n    // , saveall[0]\n    save.push(savePopup[0], saveChart[0])\n    const savedPoint = [...savepoint]\n\n\n    let calculated_Data_one_keys = []\n    let calculated_path_keys = []\n    const path_Data_one_keys = []\n    const calculatedarraykeys = []\n    calculated_Data_one_point_for_charts.forEach((item) => { calculatedarraykeys.push(Object.keys(item)); })\n    // set keys to display in dropdown button x and y\n    paths.forEach(item => { item.forEach(path => { path.interactions.forEach(j => { path_Data_one_keys.push(Object.keys(j)) }) }); });\n    const KeysFunction = event => {\n        props.evaluationn(calculated_data_one_point_for_popup);\n        for (let i = 0; i < calculatedarraykeys.length; i++) { if (calculatedarraykeys[i].length > 0) { calculated_Data_one_keys = calculatedarraykeys[i] } }\n        for (let i = 0; i < path_Data_one_keys.length; i++) { calculated_path_keys = path_Data_one_keys[i] }\n        setFinal_Keys([...calculated_path_keys, ...calculated_Data_one_keys])\n    }\n\n    function handleChangex(event) { setSelectedValuex(event.target.value) }\n    function handleChangey(event) { setSelectedValuey(event.target.value) }\n    const x = []\n    const y = []\n\n\n    const ignorekeys = [\"position\", \"material_id\", \"interaction_type\", \"interactions\", \"interacted_obj_id\", \"num_of_interactions\", \"type_of_path\"]\n    const clearStateAlert = () => setReturnn(false); if (returnn === true) { alert(\"Please select another option from the drop down !\"); clearStateAlert() }\n    const returnnn = () => { setReturnn(true); return }\n    function xFunction() {\n        if (final_keys.includes(selectedValuex)) {\n            const filtered = calculated_Data_one_point_for_charts.filter(function (el) { return el !== null; })\n            filtered.forEach(function (j) { if (j[selectedValuex] !== undefined) { for (let i = 0; i < j[selectedValuex].length; i++) { x.push(j[selectedValuex][i]) } } })\n        }\n\n        paths.forEach(function (item) {\n            item.forEach(function (path) {\n                if (final_keys.includes(selectedValuex)) {\n                    path.interactions.forEach(j => {\n                        x.push(j[selectedValuex])\n                        if (ignorekeys.includes(selectedValuex)) { returnnn() }\n                    });\n                }\n                if (ignorekeys.includes(selectedValuex)) { returnnn() }\n            });\n        });\n    }\n\n    function yFunction() {\n        if (final_keys.includes(selectedValuey)) {\n            const filtered = calculated_Data_one_point_for_charts.filter(function (el) { return el !== null; })\n            filtered.forEach(function (j) { if (j[selectedValuey] !== undefined) { for (let i = 0; i < j[selectedValuey].length; i++) { y.push(j[selectedValuey][i]) } } })\n        }\n        paths.forEach(function (item) {\n            item.forEach(function (path) {\n                if (final_keys.includes(selectedValuey)) {\n                    path.interactions.forEach(j => {\n                        y.push(j[selectedValuey])\n                        if (ignorekeys.includes(selectedValuey)) { returnnn() }\n                    });\n                }\n                if (ignorekeys.includes(selectedValuey)) { returnnn() }\n            });\n        });\n    }\n\n    function handleChangetypeofchart(event) { setSelectedchart(event.target.value) }\n    let [newchart1, setNewchart1] = useState([])\n\n\n    function createNewNewChart1() {\n        setColorr1('yellow');\n        // setSavedPoint([...savepoint, ...save])\n        setNewchart1(p => [...p, {\n            selectedchart,\n            x,\n            y,\n            selectedValuex,\n            selectedValuey,\n\n        }]);\n    }\n\n    const deleteChart = (index) => {\n        const copyNewchart1 = Object.assign([], newchart1);\n        copyNewchart1.splice(index, 1);\n        setNewchart1(newchart1 = copyNewchart1)\n    };\n    const onOpening = () => setStatus(<Spinner size=\"sm\" color=\"light\" />);\n    const onOpen = () => setStatus('Evaluation Window Selected Point');\n    const onClosing = () => setStatus(<Spinner size=\"sm\" color=\"light\" />)\n    const onClosed = () => setStatus('Click to Evaluate One Point');\n    const toggle = () => setCollapse(!collapse);\n    return (\n        <>\n            <div id={uuid()} className=\"openandclosebuttonnav1\">\n                <Navbar className=\"nav_button\" expand=\"sm\">\n                    <div className=\"headernav1\" > {status}</div>\n                    <Button className=\"btn_in_nav_button1\" size=\"sm\" dark=\"true\" onClick={toggle} >\n                        {collapse ? onClosed && <i className=\"arrow up\"></i> : <i className=\"arrow down\"></i>}\n                    </Button>\n                </Navbar>\n                <Collapse className=\"Collapse\"\n\n                    isOpen={collapse}\n                    onEntering={onOpening}\n                    onEntered={onOpen}\n                    onExiting={onClosing}\n                    onExited={onClosed}\n                >\n                    <div className=\"windowbutton1\" >\n\n                        <ButtonGroup className=\"button1\" size=\"sm\">\n                            <FormGroup >\n                                <DropdownItem header> <div className=\"headerdropdownitem\" >Select type of chart </div > </DropdownItem>\n                                <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name=\"select\" idd=\"selectchart\" defaultChecked\n                                    value={selectedchart} onChange={handleChangetypeofchart} >\n                                    <option color=\"dark\" >CDF Chart</option>\n                                    <option color=\"dark\"  >C-CDF Chart</option>\n                                    <option color=\"dark\"  >Scatter Chart</option>\n\n                                </Input>\n                            </FormGroup>\n                        </ButtonGroup>\n\n                        <ButtonGroup className=\"buttonx\" size=\"sm\">\n                            <FormGroup >\n                                <DropdownItem header color=\"dark\" ><div className=\"headerdropdownitem\" > Select X Axis </div ></DropdownItem>\n                                <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name='select' idd=\"xSelect\" defaultChecked\n                                    value={selectedValuex}\n                                    onClick={KeysFunction}\n                                    onChange={handleChangex}\n                                    placeholder=\"Check it out\"  >\n                                    {final_keys.length > 0 ? final_keys.map((item1, index1) => <option color=\"dark\" key={index1} >{item1}</option>) : <option color=\"dark\"  >Double Click</option>}\n\n                                </Input>\n\n                            </FormGroup>\n\n                            {selectedchart === \"Scatter Chart\" ?\n                                < FormGroup >\n                                    <DropdownItem header color=\"dark\"><div className=\"headerdropdownitem\" >Select Y Axis </div > </DropdownItem>\n                                    <Input color=\"dark\" className=\"btn_in_window_evaluation\" type=\"select\" name=\"select\" idd=\"ySelect\" defaultChecked\n                                        value={selectedValuey}\n                                        onClick={KeysFunction}\n                                        onChange={handleChangey} >\n                                        {final_keys.length > 0 && final_keys.map((item, index) => <option color=\"dark\" key={index} >{item}</option>)}\n                                    </Input>\n                                </FormGroup> : ''}\n                        </ButtonGroup>\n\n                        {<ButtonGroup className=\"buttonevaluation\" size=\"sm\">\n                            <FormGroup>\n                                <Button onClick={() => {\n                                    yFunction(); xFunction(); createNewNewChart1()\n                                }} >Start Evaluation</Button>\n                            </FormGroup>\n                        </ButtonGroup>}\n                    </div>\n\n                    {selectedPoint && calculatedall &&\n                        <div className=\"savebutton\">\n                            <ExportReactCSV csvData={[...savedPoint]} />\n                        </div>\n                    }\n\n                </Collapse>\n            </div>\n            <Collapse className=\"Collapse\"\n\n                isOpen={collapse}\n                onEntering={onOpening}\n                onEntered={onOpen}\n                onExiting={onClosing}\n                onExited={onClosed}\n            >\n                <div className=\"window1\">\n                    {newchart1.map(({ x, y, selectedValuex, selectedValuey, selectedchart }, index) => (\n                        <Chart key={uuid()} x={x} y={y} selectedValuex={selectedValuex} colorr1={colorr1}\n                            selectedValuey={selectedValuey} selectedchart={selectedchart} deleteChart={() => deleteChart(index)} />))}\n                </div>\n            </Collapse>\n\n        </>\n    );\n}\nexport default OnePoint;","import React, { useEffect, useState } from \"react\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Map from \"./Map\";\nimport Evaluation from \"../Evaluation/EvaluationAllPoints\";\nimport GetScenario from \"./GetScenarionames\";\nimport OnePoint from '../Evaluation/EvalOnePoint';\n\n// const id = require('./Map');\nconst REQUESTS_SUBSCRIPTION = gql`\n  subscription onResponseAdded($userID: String!) {\n    responseAdded(userID: $userID) {\n      id\n      request {\n        id\n        content\n        status\n        createdAt\n      }\n      service {\n        id\n      }\n      content\n      contentType\n    }\n  }\n`;\n\nfunction RequestsSub() {\n\n  const { data } = useSubscription(REQUESTS_SUBSCRIPTION, {\n    variables: { userID: \"web_raytracer\" },\n  });\n  const [points, setPoints] = useState([]);\n  const [tx, setTx] = useState([]);\n  const [files, setFile] = useState([]);\n  const [txinfo, setTxInfo] = useState([]);\n\n  useEffect(() => {\n    if (\n      !data ||\n      !data.responseAdded ||\n      !data.responseAdded.service ||\n      !data.responseAdded.service.id ||\n      data.responseAdded.service.id !== \"service_sum\"\n    ) {\n      return;\n    }\n    const content = JSON.parse(data.responseAdded.content)\n    setFile(content.files)\n    setPoints(content.points)\n    setTx(content.tx_position)\n    setTxInfo(content.tx_info)\n  }, [data]);\n\n  const [idd, setIdd] = useState(null);\n  const [calculateddata, setCalculateddataa] = useState({});\n  const parent = (id) => {\n    setIdd(id)\n  }\n  const evaluation = (calculateddataa) => {\n    setCalculateddataa(calculateddataa)\n  }\n  return (\n    <>\n      {<GetScenario files={files} />}\n      {/* {loading && alert(\"Please select a Point from the Map to have more options\")} */}\n      {<Evaluation idd={idd} tx={tx} points={points} evaluationn={evaluation} />}\n      {<OnePoint tx={tx} idd={idd} points={points} evaluationn={evaluation} />}\n\n\n      {<Map txinfo={txinfo} tx={tx} points={points} parentt={parent} calculateddata={calculateddata} />}\n    </>\n  );\n}\nexport default RequestsSub;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport GqlClient from \"./Services/gqlClient\";\nimport RequestsSub from \"./Components/Map/RequestsSub\";\n// import AddRequest from \"./Components/Map/AddRequest\";\n// import FloatingWindow from \"./Components/Evaluation/Window\";\nfunction App() {\n  return (\n    <ApolloProvider client={GqlClient}>\n      <div className=\"App\">\n        <header className=\"App-header\">Multipath Evaluator Application</header>\n        {/* <div>\n          <AddRequest />\n        </div> */}\n        <div>\n          <RequestsSub />\n        </div>\n      </div>\n    </ApolloProvider >\n  );\n}\nexport default App;\n","import React from \"react\";\nimport { A } from \"hookrouter\";\nimport { Button } from \"reactstrap\";\n\n\nexport const NoPageFound = () => {\n    return (\n        <div className=\"App\">\n            <Button variant=\"dark\" size=\"bm\" >\n                <A href=\"/\"> HOME </A>\n            </Button>{\" \"}\n            <h1>404</h1>\n            <p>Page doesn't exist</p>\n        </div>\n    );\n};","import React from \"react\";\nimport Home from \"./Home\";\n\nimport App from \"./App\";\n// import Private from \"./Evaluation/Evaluator\";\nimport { useRoutes } from \"hookrouter\";\nimport { NoPageFound } from \"./Components/NoPageFound\";\nconst routes = {\n  \"/\": () => <Home />,\n  \"/App\": () => <App />,\n\n};\nfunction Routes() {\n  const routeResult = useRoutes(routes)\n  return (\n    <div>\n      {routeResult || <NoPageFound />}\n    </div>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from \"./Routes\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Routes />, rootElement);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Routes />,\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}